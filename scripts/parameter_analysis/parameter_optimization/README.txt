How to use parameter analysis tool:

- Install Dependencies

    pip install bayesian-optimization
    pip install Mako

- Templatize the targeted mission file.

    After choosing the scrimmage mission file, you need to decide the parameters of the mission that you want optimized.
    In your mission file, insert environment variable notation, e.g. ${example}, for the chosen parameters. For example:
        <autonomy order="2" 
              weight_priority="${w_pr}" weight_pk="${w_pk}"
              weight_dist="${w_dist}"    dist_decay="${w_dist_decay}"> AuctionPlugin
        </autonomy>

    In the above example, parameters w_pr, w_pk, w_dist, and w_dist_decay will be optimized by this tool. 
    Keep in mind the more parameters you choose, the more difficult the analysis.

- Add Utility Metric to mission

    In order to optimize the mission, this tool needs to map parameters to some Utility (value) of the mission.
    To do this, create a scrimmage metric plugin (or add to an existing one) that will create a column in the summary.csv for the utility of the mission-
    a single float value that represents the value of the mission results.
    
    Note: An option is to add multiple utility columns, this way you can optimize a subset of the mission.

- Configure settings.json.

    Define the mission file and log path.

    The StateSpaceSampler is used to create an initial exploratory sampling of the parameter space. 
    Currently only Latin Hypercube Sampling is supported. LHS will choose N orthogonal parameter samples, providing a good initial exploration.

    UtilityColumnName is the column name in summary.csv containing the utility value of the mission, which will be the target output of the function.

    The FunctionApproximator will be the method used to map inputs to outputs and estimate the argmax (best parameters) of the mission. 
    Only Bayesian Optimization (Gaussian Process with prediction) is supported currently. 

    FunctionApproximatorParameters is a list of parameters specific to the chosen FunctionApproximator.

    NumExploreSamples is the number of samples generated by the StateSpaceSampler.

    NumIterationsPerSample is how many missions a specific parameter set should run. The average of the utility is used for the FunctionApproximator.

    NumExploitSamples is the number of samples the FunctionApproximator will iterate to maximize the utility.
        
        Note: Bayesian Optimization's parameter "kappa" tunes the function to Explore vs Exploit when choosing the next sample to try.
            kappa = 10 -> much exploration. kappa = 1 -> much exploitation

    Ranges is the collection of ranges for parameters found in the mission file.


